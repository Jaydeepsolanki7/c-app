version: 2.1

jobs:
  build:
    working_directory: ~/app
    docker:
      - image: cimg/ruby:3.2.2-node  # ✅ Official Ruby image from CircleCI maintained cimg
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_PATH: vendor/bundle
          BUNDLE_RETRY: 3
          RAILS_ENV: test
          CC_TEST_REPORTER_ID: $CC_TEST_REPORTER_ID
      - image: circleci/postgres:13.2  # ✅ Official CircleCI postgres image (DO NOT use cimg/postgres)
        environment:
          POSTGRES_PASSWORD: password

    steps:
      - checkout

      # Restore bundle cache
      - restore_cache:
          key: app-{{ checksum "Gemfile.lock" }}

      # Install bundler version compatible with Ruby 3.2.2 (optional if already in Gemfile.lock)
      - run:
          name: Install correct Bundler
          command: |
            gem install bundler -v 2.4.22

      # Yarn install (if you use Yarn for JS deps)
      - run:
          name: Yarn install
          command: yarn install

      # Bundle install
      - run:
          name: Bundle install
          command: bundle install --jobs 3 --retry 3

      # Store bundle cache
      - save_cache:
          key: app-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Wait for Postgres to be ready
      - run:
          name: Wait for postgres
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      # Setup database config (you can also use ENV vars or checked-in config if preferred)
      - run:
          name: Config database
          command: |
            echo 'test:
              adapter: postgresql
              encoding: unicode
              database: c_app_test
              username: postgres
              password: password
              host: localhost
            ' > config/database.yml

      # Setup database
      - run:
          name: Setup Database
          command: bundle exec rake db:create db:schema:load --trace

      # Setup Code Climate test reporter
      - run:
          name: Setup Code Climate Test Reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter

      # Run RSpec tests
      - run:
          name: Run RSpec
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out /tmp/test-results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
          when: always

      # Store test results
      - store_test_results:
          path: /tmp/test-results

      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
